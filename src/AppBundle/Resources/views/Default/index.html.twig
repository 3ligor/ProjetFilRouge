{% extends "AppBundle::layout.html.twig" %}
{% block title %}{{ parent() }} - Bienvenue{% endblock title %}

{% block content %}
	<div class="row">
		<div class="col-sm-12">
			<table class="table table-bordered">
				<tr>
					<td><span class="glyphicon glyphicon-user"></span></td>
					<td>Progression</td>
					<td><strong>Intitulé du projet</strong></td>
				<tr>
			</table>
		</div>
	</div>
	<div class="row">
		<div class="col-sm-6">
			<h4>Les nouveaux projets</h4>
			<table class="table table-bordered">
				{% for project in fiveProject|slice(0,5) %}
					<tr>
						<td class="text-center">
							<strong>
								{{ project.startDate|date('d-m-Y')}}
							</strong>
						</td>
						<td>
							<a href="{{ path('project_detail', { id: project.id }) }}">
								{{ project.title }}
							</a>
						</td>
					</tr>
				{% endfor %}
			</table>
		</div>
		<div class="col-sm-6">
			<h4>Il ne manque plus que vous</h4>
			<table class="table table-bordered">
				{% for project in fiveProject|slice(0,5) %}
					{% set lastPlaces = project.maxMembers - ( project.userProjects | length + 1) %}
					{% if lastPlaces > 0 %}
						<tr>
							<td class="text-center"><span class="glyphicon glyphicon-user"></span> {{ lastPlaces }}</td>
							<td><a href="{{ path('project_detail', { id: project.id }) }}">{{ project.title }}</a></td>
						</tr>
					{% else %}
						<tr>
							<td class="text-center"><span class="glyphicon glyphicon-user"></span></td>
							<td>{{ 'Aucun projet ne nécessite de nouveaux colaborateurs'}}</td>
						</tr>
					{% endif %}
				{% endfor %}
			</table>
		</div>
	</div>
{% endblock content %}

{% block javascripts %}
	{{ parent() }}
	<script src='{{ asset('bundles/app/js/socket.io.js') }}'></script>
	<script>
		var profilePath = "{{ path('user_profile') }}";

		$('#chatBtn').click(chatManager);

		function chatManager() {
			// On détache l'évenement du bouton, afin d'éviter d'initialiser la connexion serveur plusieurs fois.
			$('#chatBtn').unbind('click');

			// On crée la connexion au serveur
			var socket = io('http://localhost:3000');

			// Les données de l'utilisateur utiles au chat
			var user = {
				pseudo: '{{ app.user.pseudo }}',
				id: '{{ app.user.id }}',
				role: "{{ is_granted('ROLE_ADMIN') ? 'admin' : 'user' }}"
			};

			// On signale au serveur que l'on se connecte au chat en lui envoyant les données de l'utilisateur
			socket.emit('customConnection', user);

			// L'action d'envoie d'un message
			$('form').submit(function (e) {
				e.preventDefault();

				// Les données du message
				var messageData = {
					user: user,
					message: $('input#msg').val()
				};

				// On signale au serveur que l'on envoie un message
				socket.emit('chat message', messageData);
				$('input#msg').val('');
			});

			// L'acion à déclencher à la réception d'un message
			socket.on('chat message', function (data) {
				$('#messages').append($('<tr><td class="smallTD"><span class="hidden-sm hidden-xs">' + data.datetime + ' - </span><strong>' + data.pseudo + '</strong></td><td>' + data.message + '</td></tr>'));
				$("#messageContainer").scrollTop($("#messageContainer")[0].scrollHeight);
			});

			// L'action à déclencher à la réception de la Userlist
			socket.on('userlist', function (data) {
				$.each(data, function(index, value) {
					appendUser(value);
				});
			});

			// L'action à déclencher lorsque un utilisateur se connecte
			socket.on('userjoin', function (data) {
				appendUser(data);
			});

			// L'action à déclencher lorsque un utilisateur se déconnecte
			socket.on('userleft', function (data) {
				$('#' + data).remove();
			});

			function appendUser(data) {
				if (data.role === 'user') {
					$('#userlist').append($('<a id=' + data.socketId + ' class="list-group-item" href="' + profilePath + '/' + data.id + '">' + data.pseudo + '</a>'));
				} else if (data.role === 'admin') {
					$('#userlist').prepend($('<a id=' + data.socketId + ' class="list-group-item list-group-item-warning" href="' + profilePath + '/' + data.id + '"><span class="glyphicon glyphicon-star"></span>' + data.pseudo + '</a>'));
				}
			}
		}
	</script>
{% endblock javascripts %}